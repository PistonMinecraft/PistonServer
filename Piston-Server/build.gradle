import org.pistonmc.build.task.GenProcessedVanillaServerJarTask

import java.nio.file.Files
import java.util.jar.Attributes.Name

plugins {
    id 'java'
    id 'idea'
}
apply from: '../buildScripts/shared.gradle'

task genProcessedJar(type: GenProcessedVanillaServerJarTask) {
    forceProcess = false
}

archivesBaseName = 'piston-server'
version = "${rootProject.ext.MC_VERSION}-${rootProject.ext.VERSION}+${rootProject.ext.BUILD_NUMBER}"

repositories {
    maven {
        name 'paper-repo'
        url 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name 'sponge-repo'
        url 'https://repo-new.spongepowered.org/repository/maven-public'
    }
}

java.nio.file.Path p = genProcessedJar.outputPath

dependencies {
    if(Files.exists(p)) {
        implementation files(p)
    }
    implementation "com.destroystokyo.paper:paper-api:${rootProject.ext.MC_VERSION}-R0.1-SNAPSHOT"
    implementation 'org.spongepowered:spongeapi:8.0.0-SNAPSHOT'

    implementation 'net.sf.jopt-simple:jopt-simple:6.0-alpha-3'

    implementation "org.apache.logging.log4j:log4j-core:$LIB_LOG4J_VERSION"
    implementation "org.apache.logging.log4j:log4j-iostreams:$LIB_LOG4J_VERSION"
    implementation 'com.lmax:disruptor:3.4.2'

    implementation 'net.minecrell:terminalconsoleappender:1.2.0'
    implementation "org.jline:jline:$LIB_JLINE_VERSION"
    implementation "org.jline:jline-terminal:$LIB_JLINE_VERSION"
    implementation "org.jline:jline-reader:$LIB_JLINE_VERSION"
    implementation "org.jline:jline-terminal-jansi:$LIB_JLINE_VERSION"
}

jar {
    manifest {
        attributes([
                Name.IMPLEMENTATION_VENDOR: 'PistonMC',
                Name.IMPLEMENTATION_VERSION: rootProject.ext.VERSION,
        ])
    }
}