import com.github.difflib.DiffUtils
import com.github.difflib.UnifiedDiffUtils
import org.pistonmc.build.task.ApplyPatchesTask
import org.pistonmc.build.task.GenDecompiledSourcesTask
import org.pistonmc.build.task.GenPatchesTask
import org.pistonmc.build.task.GenProcessedVanillaServerJarTask

import java.nio.file.Files
import java.util.jar.Attributes.Name

plugins {
    id 'java'
    id 'idea'
}

apply from: '../buildScripts/shared.gradle'

task genProcessedJar(type: GenProcessedVanillaServerJarTask) {
    forceProcess = false
}

task genDecompiledSources(type: GenDecompiledSourcesTask) {
    dependsOn genProcessedJar
    forceGen = false
}

task genPatches(type: GenPatchesTask) {
    dependsOn genDecompiledSources
    inputSourcesDir = sourceSets.main.java.srcDirs.iterator().next().toPath()
    outputPatchesDir = project.projectDir.toPath().resolve('MC-Patches')
}

task applyPatches(type: ApplyPatchesTask) {
    dependsOn genDecompiledSources
    inputPatchesDir = projectDir.toPath().resolve('MC-Patches')
    outputSourceDir = sourceSets.main.java.srcDirs.iterator().next().toPath()
}

archivesBaseName = 'piston-server'
version = "${rootProject.ext.MC_VERSION}-${rootProject.ext.VERSION}+${rootProject.ext.BUILD}"

repositories {
    maven {
        name 'paper-repo'
        url 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name 'sponge-repo'
        url 'https://repo-new.spongepowered.org/repository/maven-public'
    }
}

java.nio.file.Path p = genProcessedJar.outputPath

String bukkitVersion = "${rootProject.ext.MC_VERSION}-R0.1-SNAPSHOT"

configurations {
    implementation {
        canBeResolved = true
    }
}

dependencies {
    if(Files.exists(p)) {
        implementation files(p)
    }
    implementation "com.destroystokyo.paper:paper-api:$bukkitVersion"
    implementation 'org.spongepowered:spongeapi:8.0.0-SNAPSHOT'
    implementation project(path: ':Piston-API', configuration: 'expose')

    implementation 'net.sf.jopt-simple:jopt-simple:6.0-alpha-3'

    implementation "org.apache.logging.log4j:log4j-core:$LIB_LOG4J_VERSION"
    implementation "org.apache.logging.log4j:log4j-iostreams:$LIB_LOG4J_VERSION"
    implementation 'com.lmax:disruptor:3.4.2'

    implementation 'io.netty:netty-all:4.1.58.Final'

    implementation 'net.minecrell:terminalconsoleappender:1.2.0'
    implementation "org.jline:jline:$LIB_JLINE_VERSION"
    implementation "org.jline:jline-terminal:$LIB_JLINE_VERSION"
    implementation "org.jline:jline-reader:$LIB_JLINE_VERSION"
    implementation "org.jline:jline-terminal-jansi:$LIB_JLINE_VERSION"
}

jar {
    manifest {
        attributes([
                (Name.MAIN_CLASS.toString()): 'org.pistonmc.server.main.PistonMain',
                (Name.IMPLEMENTATION_VENDOR.toString()): 'PistonMC',
                (Name.IMPLEMENTATION_TITLE.toString()): 'Piston',
                (Name.IMPLEMENTATION_VERSION.toString()): rootProject.ext.VERSION,
                'Bukkit-Version': bukkitVersion
        ])
//        configurations.implementation.each { dep ->
//            from(project.zipTree(dep)) {
//                exclude 'module-info.class'
//                if(dep.name.contains('server_processed')) {
//                    exclude 'log4j2.xml', 'org/apache/logging/', 'joptsimple/', 'META-INF/', 'io/netty', 'it/unimi/dsi/fastutil/', 'javax/annotation'
//                }
//            }
//        }
    }
}